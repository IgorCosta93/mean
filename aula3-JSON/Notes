In the case we want to set the status with a page response
we can do like this

app.get('/', function(req,res){
    console.log("GET the homepage");
    res
        .status(404)
        .send("Express yourself");
});

---------------------------------------

//when we use this function we eliminate the need of
//routen pages like we have done before
app.use(express.static(path.join(__dirname,'public')));

app.get('/', function(req,res){
    //right know only the req is done no response
    console.log("GET the homepage");
    //know i send a response
    res
        .status(200)
        //.send("Express yourself");
        //here we pass the name folder and file in string
        //to avoid sintaxe erros in differents kinds of systems
        .sendFile(path.join(__dirname,'public','index.html'));
});

----------------------------------------------

//return a json file
app.get('/json', function(req,res){
    console.log("Get the json");
    res
        .status(200)
        .json({"jsonData": true});
});

app.get('/file', function(req, res){
    console.log("GET the file");
    res
        .status(200)
        //path.join alows to join more than one file
        //in this case path + file
        //__dirname get the name of the actual diretory
        .sendFile(path.join(__dirname,'app.js'));
});

--------------------------------------
When a mongo db have a sub data without a id
this is the comand to add
this is Only necessary if you create the db by yourself
if mongoose create the db it's already have been create

db.hotels.update(
    {},
    {
        $set : {
            "reviews.0._id" : ObjectId()
        }
    },
    {
        multi : true
    }
)

--------------------------------------------

Add one using the mongo basic driver

module.exports.hotelsAddOne = function(req, res) {
    var db = dbconn.get();
    var collection = db.collection('hotels');
    var newHotel;

    console.log("POST new hotel");

    if (req.body && req.body.name && req.body.stars){
        newHotel = req.body;
        //Converting the string to a Int
        newHotel.stars = parseInt(req.body.stars, 10);
        //This is were we recover the information POST
        //treated by the middleware
        //console.log(req.body);

        //function to insert in mongodb
        //first the data and second a function callback
        collection.insertOne(newHotel, function(err,response){
            //console.log(newHotel)
            //ops allows us to see the data insert into mongodb
            console.log(response.ops);
            res
                .status(201)
                //.json(req.body);
                .json(response.ops);
        });
    }else {
        console.log("Data missing from body");
        res
            .status(400)
            .json({"message":"Required data missing from body"});
    }
};
